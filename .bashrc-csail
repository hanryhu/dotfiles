######## TERMINAL CONFIG
#BEGIN better autocomplete for sudo
complete -cf sudo
#END better autocomplete for sudo
# BEGIN custom code to set prompt
export PS1="\w$ "
# End custom code to set prompt

# get common InfoLab settings:
  source ~start/common-bashrc
  # THIS COMMENT LINE IS IMPORTANT - make sure to copy this too.
  function infolab() { eval "ssh -X henryhu@$1.csail.mit.edu" ;}
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=3000


######## USEFUL ALIASES
# better which
alias which=type
# end better which
# better mv
alias mv-mv=/bin/mv
function maybe-git-mv ()
{
    local repo=$(git rev-parse --show-toplevel 2> /dev/null)
    if [[ -e "${repo}" ]]; then
	echo "Using git mv -- if you want normal mv use mv-mv";
	git mv "$@";
    else
	mv-mv "$@";
    fi
}
alias mv=maybe-git-mv
#end better mv
# better rm
alias rm-rm=/bin/rm
function maybe-git-rm ()
{
    local repo=$(git rev-parse --show-toplevel 2> /dev/null)
    if [[ -e "${repo}" ]]; then
	echo "Using git rm -- if you want normal rm use rm-rm";
	git rm "$@";
    else
	rm-rm "$@";
    fi
}
alias rm=maybe-git-rm
#end better rm
# Custom code to switch scrolling
BASHRC_TOGGLESCRIPT="osascript -e 'tell application \"System Preferences\"
  reveal anchor \"trackpadTab\" of pane id \"com.apple.preference.trackpad\"
end tell

tell application \"System Events\" to tell process \"System Preferences\"
    click radio button 2 of tab group 1 of window 1
    click checkbox 1 of tab group 1 of window 1
end tell

quit application \"System Preferences\"'"
alias natural=$BASHRC_TOGGLESCRIPT
alias n=natural
# End custom code to toggle scrolling
#BEGIN rb
alias rb="irb --simple-prompt"
#END rb
#BEGIN lsl
alias lsl='find . -ls -name "*~" -prune'
#END lsl
#BEGIN start minecraft server
alias mc-start='exec java -Xms1G -Xmx1G -jar server.jar nogui;'
#END start minecraft server
#BEGIN whoami aliases
alias whoami-test='nosetests -v ~/whoami/tests && whoami-lint'
alias whoami-lint='pycodestyle ~/whoami/whoami ~/whoami/tests ~/whoami/scripts --ignore=E501,W504'
alias whoami-run='python ~/whoami/scripts/run.py'
alias astro-test='nosetests -v ~/astroparse/tests && astro-lint'
alias astro-lint='pycodestyle ~/astroparse/astroparse ~/astroparse/tests ~/astroparse/scripts --ignore=E501,W504'
alias astro-run='python ~/astroparse/ilearn.py'
elint () {
    # whoami lint
    lint_files=$(whoami-lint -q | paste -sd " " -)
    if [ ! -z "$lint_files" ]; then
	emacs $@ $lint_files
    else
	echo "Nothing to lint in whoami! Yay :)"
    fi
    # astroparse lint
    lint_files=$(astro-lint -q | paste -sd " " -)
    if [ ! -z "$lint_files" ]; then
	emacs $@ $lint_files
    else
	echo "Nothing to lint in astroparse! Yay :)"
    fi
}
autolint () {
    # whoami lint
    lint_files=$(whoami-lint -q | paste -sd " " -)
    if [ ! -z "$lint_files" ]; then
	autopep8 --in-place --ignore=E501,W504 $@ $lint_files
    else
	echo "Nothing to lint in whoami! Yay :)"
    fi
    # astroparse lint
    lint_files=$(astro-lint -q | paste -sd " " -)
    if [ ! -z "$lint_files" ]; then
	autopep8 --in-place --ignore=E501,W504 $@ $lint_files
    else
	echo "Nothing to lint in astroparse! Yay :)"
    fi
}
alias ai='python ~/astroparse/scripts/astroparser_interactive.py -vsop'
alias ts='python ~/astroparse/scripts/try_spacy.py'
function astro () {
    cd ~/astroparse
    workon astro
}
#END whoami aliases
########### GIT TOOLS
#BEGIN git auto-complete
test -f ~/.git-completion.bash && . $_
#END git auto-complete
#BEGIN use emacs to open all affected files in a git diff
ediff () {
    emacs `git diff --name-only $@ | paste -sd " " -`
}
#END use emacs to open all affected files in a git diff
#BEGIN analyze-history
analyze-history () {
    history|awk '{print $2, $3}'|awk 'BEGIN {FS="|"} {print $1}'|sort|uniq -c|sort -nr|less
}
#END analyze-history
#BEGIN git aliases
alias gs='git status'
alias go='git checkout'
#END git aliases
#BEGIN pbcopy for linux
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'
#END pbcopy for linux
#BEGIN print file to betty
alias print-betty='lpoptions -d betty && lp'
#END print file to betty
#BEGIN bluetooth for linux
alias start-bluetooth='sudo /etc/init.d/bluetooth start'
#END bluetooth for linux

#END Useful aliases

#This comment line is important toot

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
if [ -f "/data/infolab/workspaces/henryhu/anaconda3/etc/profile.d/conda.sh" ]; then
    . "/data/infolab/workspaces/henryhu/anaconda3/etc/profile.d/conda.sh"
else
    export PATH="/data/infolab/workspaces/henryhu/anaconda3/bin:$PATH"
fi
# <<< conda initialize <<<

# Fix "Postgres driver not installed" for peewee
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/data/infolab/workspaces/henryhu/anaconda3/lib/"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# For example, contains pycodestyle
export PATH="$PATH:$HOME/.local/bin"

# For some reason, this has recently been `cat`.  That's bad for `git log`, for example.
export PAGER=less

# added by travis gem
[ -f /afs/csail.mit.edu/u/h/henryhu/.travis/travis.sh ] && source /afs/csail.mit.edu/u/h/henryhu/.travis/travis.sh

source ~/.wd-history


##########################################################################
# StanfordNLP server setup                                               #
# From https://stanfordnlp.github.io/CoreNLP.                            #
##########################################################################
# for Java
export CORENLP_HOME=/archive/infolab/corpora/stanfordnlp/stanford-corenlp-4.2.0/
export CLASSPATH=$CLASSPATH:$CORENLP_HOME/*:
# for Python (NLTK)
export STANFORD_MODELS=$CORENLP_HOME
export STANFORD_NLP_PORT=9000
# `stanford-nlp` by itself starts a REPL.
# `stanford-nlp -file filename` creates an output file
# filename.out with parse information.
function stanford-nlp () {
    echo "'java -Xmx5g edu.stanford.nlp.pipeline.StanfordCoreNLP'";
    echo "Estimated startup time is 1 minute.";
    echo "-----------------------------------";
    # From https://stanfordnlp.github.io/CoreNLP/#quickstart.
    java -Xmx5g edu.stanford.nlp.pipeline.StanfordCoreNLP $@;
}
function stanford-nlp-server () {

    command=$1

    if [[ -z $command ]]; then
        echo "Usage: stanford-nlp-server [start|stop]";
    elif [ $command == "start" ]; then        
        echo "Starting the Stanford CoreNLP server..."
        echo "java -mx4g -cp "*" edu.stanford.nlp.pipeline.StanfordCoreNLPServer -port $STANFORD_NLP_PORT -timeout 15000";
        nohup java -mx4g edu.stanford.nlp.pipeline.StanfordCoreNLPServer -port $STANFORD_NLP_PORT -timeout 15000 &
        echo "Access the server in a web browser at http://localhost:$STANFORD_NLP_PORT"
    elif [ $command == "stop" ]; then
        echo "Stopping the Stanford CoreNLP server..."
        wget "localhost:$STANFORD_NLP_PORT/shutdown?key=`cat /tmp/corenlp.shutdown`" -O -
        echo "Done"
    else
        echo "Usage: stanford-nlp-server [start|stop]";
    fi
}
